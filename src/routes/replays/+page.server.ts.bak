import type { PageServerLoad } from './$types';

export const load: PageServerLoad = async ({ url, fetch }) => {
  try {
    const page = url.searchParams.get('page') || '1';
    const limit = url.searchParams.get('limit') || '20';
    const status = url.searchParams.get('status') || 'active';
    
    const response = await fetch(`/api/replays?page=${page}&limit=${limit}&status=${status}`);
    
    if (!response.ok) {
      throw new Error(`Failed to fetch replays: ${response.status}`);
    }
    
    const data = await response.json();
    
    return {
      replays: data.replays || [],
      pagination: data.pagination || { page: 1, limit: 20, total: 0, totalPages: 0, hasNext: false, hasPrev: false },
      error: null
    };
  } catch (error) {
    console.error('Failed to load replays:', error);
    return {
      replays: [],
      pagination: { page: 1, limit: 20, total: 0, totalPages: 0, hasNext: false, hasPrev: false },
      error: error instanceof Error ? error.message : 'Unknown error occurred'
    };
  }
};